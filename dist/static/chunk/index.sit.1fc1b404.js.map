{"version":3,"file":"index.sit.1fc1b404.js","sources":["../../../src/pages/MyTerritory/ChickenAChicken/config/CardItem.ts","../../../src/pages/MyTerritory/ChickenAChicken/components/Game/useGame.ts","../../../src/pages/MyTerritory/ChickenAChicken/components/Game/index.tsx"],"sourcesContent":["/*\n * @Author: willwil\n * @Date: 2022-11-11 21:14:54\n * @LastEditors: willwil\n * @LastEditTime: 2022-11-11 22:05:04\n * @Description:\n */\nimport { COLOR_TYPE, CONTENT_TYPE } from \"./index\";\n\n// 卡片的配置项\nexport default class CardItem {\n  x: number;\n\n  y: number;\n\n  z: number;\n\n  key: number;\n\n  val: number | undefined;\n\n  content: string | undefined;\n\n  style: object;\n\n  show: boolean;\n\n  constructor({\n    x,\n    y,\n    z,\n    key,\n    baseWidth = 20,\n    baseHeight = 21,\n  }: Pick<ICardItem, \"x\" | \"y\" | \"z\" | \"key\"> & Pick<IConfig, \"baseHeight\" | \"baseWidth\">) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.key = key;\n    this.show = true; // 初始化默认都展示\n    this.style = {\n      top: `${y * baseHeight}px`,\n      left: `${x * baseWidth}px`,\n      width: `${baseWidth * 2 - 2}px`,\n      height: `${baseHeight * 2 - 8}px`,\n    };\n  }\n\n  // 设置值\n  setValue(val: number) {\n    this.val = val;\n    this.content = CONTENT_TYPE[val];\n    Object.assign(this.style, COLOR_TYPE[val]);\n  }\n}\n","import CardItem from \"../../config/CardItem\";\n\n// 获取地图\nexport const getMap = ({ x, y, z, cardRandom, baseHeight, baseWidth }: IConfig) => {\n  const width = (x - 1) * 2;\n  const height = (y - 1) * 2 + 1;\n  let key = 0;\n\n  // 初始化地图\n  const cardMap = new Array(z)\n    .fill(0)\n    .map((item) => new Array(height).fill(0).map((heightItem) => new Array(width).fill(0)));\n  const cardItemList = [];\n\n  for (let k = 0; k < z; k += 1) {\n    // 边界收缩\n    const shrink = Math.floor((z - k) / 3);\n    for (let i = shrink; i < height - shrink; i += 1) {\n      // 保证生成的方块左右对称，有美感\n      const mid = Math.ceil((width - shrink) / 2);\n      console.log(mid);\n\n      for (let j = shrink; j <= mid; j += 1) {\n        // 判断当前点是否可以生成方块\n        let canPlaceItem = true;\n        // 左边有卡片\n        if (j > 0 && cardMap[k][i][j - 1]) {\n          canPlaceItem = false;\n        }\n        // 上边有卡片\n        if (i > 0 && cardMap[k][i - 1][j]) {\n          canPlaceItem = false;\n        }\n        // 左上有卡片\n        if (i > 0 && j > 0 && cardMap[k][i - 1][j - 1]) {\n          canPlaceItem = false;\n        }\n        // 右上有卡片\n        if (i > 0 && cardMap[k][i - 1][j + 1]) {\n          canPlaceItem = false;\n        }\n        // 卡片密度\n        if (Math.random() > cardRandom) {\n          canPlaceItem = false;\n        }\n        if (canPlaceItem) {\n          key += 1;\n          const cardItem = new CardItem({ x: i, y: j, z: k, key, baseWidth, baseHeight }) as ICardItem;\n          // 地图中这个点已经有了卡片\n          cardMap[k][i][j] = cardItem;\n          cardItemList.push(cardItem);\n          // 对称放置\n          if (j < mid) {\n            key += 1;\n            const cardItem = new CardItem({ x: width - i, y: j, z: k, key, baseWidth, baseHeight }) as ICardItem;\n            cardMap[k][i][width - j] = cardItem;\n            cardItemList.push(cardItem);\n          }\n        }\n      }\n    }\n  }\n\n  // 保证得出来的卡片是3的倍数，即有解\n  const leftCardList = cardItemList.splice(0, key % 3);\n\n  // 地图置为没有卡片\n  // eslint-disable-next-line no-restricted-syntax\n  for (const { x, y, z } of leftCardList) {\n    cardMap[z][y][x] = 0;\n  }\n  console.log(cardItemList);\n\n  return [cardMap, cardItemList] as [typeof cardMap, typeof cardItemList];\n};\n\n// 填充内容和颜色\nexport const setCardValue = ({ maxCardType }: IConfig, cardItemList: ICardItem[]) => {\n  const colorStack = new Array(maxCardType);\n\n  // 填充文字和颜色\n  cardItemList.forEach((item: ICardItem) => {\n    // 随机取一个图片和颜色值\n    const value = Math.ceil(Math.random() * maxCardType);\n    colorStack[value] = colorStack[value] ? [...colorStack[value], item] : [item];\n    // 有三个了就清空\n    if (colorStack[value] && colorStack[value].length % 3 === 0) {\n      colorStack[value].map((cardItem: ICardItem) => cardItem.setValue(value));\n      colorStack[value] = null;\n    }\n  });\n\n  // 取出未用完的item\n  const leftItem = colorStack.reduce((pre, cur) => [...pre, ...(cur || [])], []);\n  for (let i = 0; i < leftItem.length; i += 3) {\n    const value = Math.ceil(Math.random() * maxCardType);\n    for (let j = i; j < i + 3; j += 1) {\n      leftItem[j].setValue(value);\n    }\n  }\n\n  return cardItemList;\n};\n\n// 计算覆盖状态\nexport const calcuCover = ({ x, y }: IConfig, cardItemList: ICardItem[]): ICardItem[] => {\n  const maxWidth = (x - 1) * 2;\n  const maxHeight = (y - 1) * 2 + 1;\n\n  // 初始化覆盖数组，默认全部没有覆盖\n  const coverMap = new Array(maxHeight).fill(0).map((item) => new Array(maxWidth).fill(false));\n\n  // 从顶层往底层计算\n  for (let i = cardItemList.length - 1; i >= 0; i -= 1) {\n    const item = cardItemList[i];\n    // 如果展示再判断\n    if (item.show) {\n      const { x, y } = item;\n      if (Math.abs(y - maxHeight) === 1) {\n        // 判断是否有覆盖\n        if (coverMap[y][x]) {\n          item.cover = true;\n        } else if (coverMap[y][x + 1]) {\n          item.cover = true;\n        } else if (coverMap[y - 1][x]) {\n          item.cover = true;\n        } else if (coverMap[y - 1][x + 1]) {\n          item.cover = true;\n        } else {\n          item.cover = false;\n        }\n        coverMap[y][x] = true;\n        coverMap[y - 1][x] = true;\n        coverMap[y][x + 1] = true;\n        coverMap[y - 1][x + 1] = true;\n      } else {\n        // 判断是否有覆盖\n        if (coverMap[y][x]) {\n          item.cover = true;\n        } else if (coverMap[y][x + 1]) {\n          item.cover = true;\n        } else if (coverMap[y + 1][x]) {\n          item.cover = true;\n        } else if (coverMap[y + 1][x + 1]) {\n          item.cover = true;\n        } else {\n          item.cover = false;\n        }\n        coverMap[y][x] = true;\n        coverMap[y + 1][x] = true;\n        coverMap[y][x + 1] = true;\n        coverMap[y + 1][x + 1] = true;\n      }\n    }\n  }\n\n  return cardItemList;\n};\n\n// 找到某个列表元素的索引\nexport const findItemIndex = (cardItem: ICardItem, itemList: ICardItem[]) => {\n  return itemList.findIndex((item) => item.key === cardItem.key);\n};\n","/* eslint-disable react/no-unknown-property */\nimport { useEffect, useMemo, useState } from \"react\";\nimport { Badge, message } from \"antd\";\nimport { setCardValue, calcuCover, getMap, findItemIndex } from \"./useGame\";\n\nconst SVG_LIST = {\n  SAVE: (\n    <svg viewBox='0 0 1024 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='9952' width='40' height='40'>\n      <path\n        d='M695.15 479.59c-132.66 0-240.2 107.54-240.2 240.2S562.49 960 695.15 960A238.47 238.47 0 0 0 868 888a234.15 234.15 0 0 0 67.11-169.64c-0.16-132-107.31-238.92-239.33-238.76zM698 899.22A178.28 178.28 0 0 1 695.15 543a181.44 181.44 0 0 1 182.6 176.55 177.7 177.7 0 0 1-175.66 179.67q-2.03 0.02-4.09 0z'\n        fill='#f4ea2a'\n        p-id='9953'\n      />\n      <path\n        d='M753 605.45l-69.41 66.82a28.8 28.8 0 0 0-19.3 28.8v135.65a28.8 28.8 0 0 0 30.82 30.82 31.68 31.68 0 0 0 31.1-30.82v-120.1l67.11-67.39a28.8 28.8 0 0 0 0-43.49 27.07 27.07 0 0 0-40.32-0.29z'\n        fill='#f4ea2a'\n        p-id='9954'\n      />\n      <path\n        d='M483.18 883.09H218.79A135.36 135.36 0 0 1 84 748V198.79A135.08 135.08 0 0 1 218.79 64h538.28a135.08 135.08 0 0 1 134.79 134.79v339l-22.75-22.46a254.6 254.6 0 0 0-39.75-32.54l-5.76-4V198.5a66.53 66.53 0 0 0-51-64.23V311.4a92.45 92.45 0 0 1-92.45 92.45H298.57a92.45 92.45 0 0 1-92.45-92.45V133.7a66.82 66.82 0 0 0-53.57 65.09V748a66.53 66.53 0 0 0 66.53 66.53h220.61l3.46 7.49a294.34 294.34 0 0 0 24.48 39.75zM274.66 132.55V311.4a23.9 23.9 0 0 0 23.9 23.9h381a24.48 24.48 0 0 0 24.19-23.9V132.55z'\n        fill='#f4ea2a'\n        p-id='9955'\n      />\n      <path\n        d='M593.2 306.21a40.32 40.32 0 0 1-40.32-40.32v-60.77a40.32 40.32 0 1 1 80.64 0v60.48a40.32 40.32 0 0 1-40 40.61z'\n        fill='#f4ea2a'\n        p-id='9956'\n      />\n    </svg>\n  ),\n  RETRY: (\n    <svg viewBox='0 0 1024 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='1739' width='40' height='40'>\n      <path\n        d='M921.6 585.728c0 226.304-184.32 409.6-409.6 409.6s-409.6-182.272-409.6-409.6c0-78.848 21.504-152.576 62.464-215.04l133.12 76.8c-25.6 39.936-39.936 87.04-39.936 138.24 0 142.336 114.688 254.976 254.976 254.976 142.336 0 257.024-114.688 257.024-254.976 0-118.784-79.872-219.136-189.44-247.808v131.072L196.608 248.832 577.536 28.672v151.552C772.096 214.016 921.6 381.952 921.6 585.728z'\n        fill='#f4ea2a'\n        p-id='1740'\n      />\n    </svg>\n  ),\n  SHUFFLE: (\n    <svg viewBox='0 0 1024 1024' version='1.1' xmlns='http://www.w3.org/2000/svg' p-id='4374' width='40' height='40'>\n      <path\n        d='M6.070857 731.648c0 27.428571 20.150857 46.281143 50.578286 46.281143h97.718857c73.691429 0 118.272-21.430857 171.428571-83.565714l96.420572-112.292572 96 112.274286c53.138286 62.171429 97.28 84.004571 172.288 84.004571h78.427428v95.140572c0 23.149714 14.573714 37.723429 38.582858 37.723428 10.276571 0 20.992-3.84 28.708571-10.715428l161.993143-133.705143c19.712-15.872 19.291429-41.581714 0-57.435429l-162.011429-134.582857a44.105143 44.105143 0 0 0-28.708571-10.697143c-23.990857 0-38.582857 14.573714-38.582857 37.705143v83.145143H692.662857c-44.141714 0-71.570286-14.134857-106.715428-54.857143l-102.418286-119.570286 102.418286-119.149714c35.145143-41.142857 62.573714-55.277714 106.715428-55.277714h76.288v86.125714c0 23.168 14.573714 37.723429 38.582857 37.723429 10.276571 0 20.992-3.84 28.708572-10.715429l161.993143-133.705143c19.712-15.853714 19.291429-41.142857 0-57.417143l-162.011429-134.582857a44.105143 44.105143 0 0 0-28.708571-10.715428c-23.990857 0-38.582857 14.573714-38.582858 37.705143v92.580571h-78.409142c-75.008 0-119.149714 21.851429-172.288 84.004571l-96 112.274286-96.420572-112.274286c-53.156571-62.153143-97.718857-84.004571-171.446857-84.004571H56.649143c-30.427429 0-50.578286 18.852571-50.578286 46.72 0 27.428571 20.571429 46.701714 50.578286 46.701714h99.419428c41.581714 0 67.712 14.153143 102.436572 54.857143l102.418286 119.149714-102.418286 119.588572c-35.145143 40.704-61.293714 54.857143-102.436572 54.857143H56.649143c-29.988571 0-50.578286 19.273143-50.578286 46.701714z'\n        p-id='4375'\n        fill='#f4ea2a'\n      />\n    </svg>\n  ),\n};\n\ninterface IProps {\n  config: IConfig;\n  changeWin: (win: boolean) => void;\n  [props: string]: any;\n}\n\nconst Gaming = ({ config, changeWin }: IProps) => {\n  const { x, y, baseWidth, baseHeight, retryNumber, shuffleNumber, saveNumber } = config;\n  // 展示区域宽度\n  const width = useMemo(() => ((x - 1) * 2 + 2) * baseWidth, [config]);\n  // 展示区域高度\n  const height = useMemo(() => ((y - 1) * 2 + 1) * baseHeight, [config]);\n  // 初始偏移量\n  const leftOffset = useMemo(() => (width - (x + 2) * baseWidth * 2) / 2, [config]);\n  // 总的方块数\n  const [totalCard, setTotalCard] = useState(0);\n  // 已经完成的方块数\n  const [doneCard, setDoneCard] = useState(0);\n  // // 能否撤回\n  // const [canWithdraw, setCanWithdraw] = useState(true);\n  // // 地图\n  // const [cardMap, setCardMap] = useState([]);\n  // 卡片列表\n  const [cardItemList, setCardItemList] = useState([] as ICardItem[]);\n  // 已选择的列表\n  const [selectList, setSelectList] = useState([] as ICardItem[]);\n  // 消除完的列表\n  const [clearList, setClearList] = useState([] as ICardItem[]);\n  // 保存的卡片\n  const [saveList, setSaveList] = useState([] as ICardItem[]);\n  // 历史操作过的卡片\n  const [historyList, setHistoryList] = useState([] as ICardItem[]);\n  // 能使用的次数\n  const [retryCount, setRetryCount] = useState(retryNumber);\n  const [saveCount, setSaveCount] = useState(saveNumber);\n  const [shuffleCount, setShuffleCount] = useState(shuffleNumber);\n\n  const initGame = () => {\n    // 获取初始化的地图和卡片列表\n    const [, initCardItemList] = getMap(config);\n    // 填充物品\n    const fillValueItemList = setCardValue(config, initCardItemList);\n    setTotalCard(fillValueItemList.length);\n    // 返回计算层级之后的东西\n    setCardItemList(calcuCover(config, fillValueItemList));\n  };\n\n  useEffect(() => {\n    // 初始化游戏\n    initGame();\n  }, []);\n\n  // 格式化样式\n  const formatItemList = (cardList: ICardItem[]) => {\n    return cardList.map((item, index) => {\n      return {\n        ...item,\n        style: {\n          ...item.style,\n          top: 0,\n          left: `${leftOffset + (index + 1) * baseWidth * 2}px`,\n        },\n      };\n    });\n  };\n\n  // 判断是否有三个一样的\n  const handleSelectItem = (selectList: ICardItem[], item: ICardItem) => {\n    let index = -1;\n    let count = 1;\n    let tempClearList: ICardItem[] = [];\n    let selectLists: ICardItem[] = selectList;\n    // 自己实现一个findLastIndex的方法，es6没有\n    for (let i = selectLists.length - 1; i >= 0; i -= 1) {\n      if (selectLists[i].val === item.val) {\n        index = index === -1 ? i : index;\n        count += 1;\n      }\n    }\n    // 有三个一样的了\n    if (count === 3) {\n      // 更新已经消除的和已经选择的\n      tempClearList = [...selectLists.filter((selectItem) => selectItem.val === item.val), item];\n      selectLists = selectLists.filter((selectItem) => selectItem.val !== item.val);\n    } else if (index > -1) {\n      selectLists.splice(index, 0, item);\n    } else {\n      selectLists.push(item);\n    }\n    // 更新状态\n    tempClearList = tempClearList.map((item) => {\n      return {\n        ...item,\n        style: {\n          ...item.style,\n          top: \"120%\",\n          left: `${leftOffset - 60}px`,\n        },\n      };\n    });\n\n    setClearList([...clearList, ...tempClearList]);\n    setSelectList(formatItemList(selectLists));\n\n    // 已完成的卡片\n    setDoneCard([...clearList, ...tempClearList].length);\n\n    // 判断输赢\n    if (selectLists.length >= 7) {\n      changeWin(false);\n      return;\n    }\n    if ([...clearList, ...tempClearList].length === totalCard) {\n      changeWin(true);\n    }\n  };\n  // 点击卡片\n  const onCardClick = (item: ICardItem) => {\n    const cardIndex = findItemIndex(item, cardItemList);\n    // 设置历史方块\n    setHistoryList([...historyList, item]);\n    // 如果是点击的暂存\n    const saveIndex = findItemIndex(item, saveList);\n    if (saveIndex > -1) {\n      saveList.splice(saveIndex, 1);\n      setSaveList(formatItemList(saveList));\n    }\n    // 显示不可见\n    cardItemList[cardIndex].show = false;\n    handleSelectItem(selectList, item);\n\n    // 重新计算覆盖率\n    setCardItemList(calcuCover(config, cardItemList));\n  };\n\n  // 点击使用暂存道具\n  const saveCard = () => {\n    if (saveList.length !== 0 || selectList.length === 0) {\n      message.info(\"您现在不能使用暂存道具\");\n      return;\n    }\n    if (!saveCount) {\n      message.warn(\"您的暂存次数已用完\");\n      return;\n    }\n    setSaveCount(saveCount - 1);\n\n    setSaveList(formatItemList(selectList.slice(0, 3)));\n    setSelectList(formatItemList(selectList.slice(3)));\n  };\n\n  // 随机打乱牌\n  const shuffle = () => {\n    if (!shuffleCount) {\n      message.warn(\"您的洗牌次数已用完\");\n      return;\n    }\n    const length = cardItemList.length;\n    cardItemList.forEach((item, index) => {\n      const randNum = Math.floor(length * Math.random());\n      const newItem = cardItemList[randNum];\n      const temp = item;\n      cardItemList[index] = {\n        ...item,\n        x: newItem.x,\n        y: newItem.y,\n        z: newItem.z,\n        style: {\n          ...item.style,\n          left: newItem.style.left,\n          top: newItem.style.top,\n        },\n      };\n      cardItemList[randNum] = {\n        ...newItem,\n        x: temp.x,\n        y: temp.y,\n        z: temp.z,\n        style: {\n          ...newItem.style,\n          left: temp.style.left,\n          top: temp.style.top,\n        },\n      };\n    });\n\n    cardItemList.sort((a: ICardItem, b: ICardItem) => a.z - b.z);\n    setCardItemList([...calcuCover(config, cardItemList)]);\n    setShuffleCount(shuffleCount - 1);\n  };\n\n  // 点击使用撤回道具\n  const onClickWithDraw = () => {\n    if (!historyList.length) {\n      message.info(\"你暂时还没有任何操作\");\n      return;\n    }\n    if (!retryCount) {\n      message.warn(\"您的撤回次数已用完\");\n      return;\n    }\n    while (historyList.length) {\n      const withDrawItem = historyList.pop() as ICardItem;\n      if (findItemIndex(withDrawItem, clearList) < 0) {\n        const selectIndex = findItemIndex(withDrawItem, selectList);\n        const saveIndex = findItemIndex(withDrawItem, saveList);\n        const cardIndex = findItemIndex(withDrawItem, cardItemList);\n        if (selectIndex > -1) {\n          selectList.splice(selectIndex, 1);\n        }\n        if (saveIndex > -1) {\n          saveList.splice(saveIndex, 1);\n        }\n        cardItemList[cardIndex] = {\n          ...withDrawItem,\n          show: true,\n        };\n        // 卡片类型\n        setCardItemList([...cardItemList]);\n        setSaveList(formatItemList(saveList));\n        setSelectList(formatItemList(selectList));\n        setRetryCount(retryCount - 1);\n        break;\n      }\n    }\n    // 设置历史卡片\n    setHistoryList([...historyList]);\n    // 重新计算覆盖率\n    setCardItemList(calcuCover(config, cardItemList));\n  };\n\n  return (\n    <div style={{ width: width < 160 ? 160 : width, height: height < 170 ? 170 : height }} className='card-wrap'>\n      <div className='tips'>\n        已消除卡片: {doneCard} / {totalCard}\n      </div>\n      {cardItemList.map((item, index) =>\n        // 展示列表\n        {\n          return item.show ? (\n            <div\n              key={item.key}\n              style={item.style}\n              className={[item.cover && \"item-cover\", \"card-item\"].filter(Boolean).join(\" \")}\n              onClick={() => onCardClick(item)}\n            >\n              {item.content}\n            </div>\n          ) : (\n            \"\"\n          );\n        },\n      )}\n      <div className='save-list' style={{ width: 3 * baseWidth * 2, height: baseHeight * 2 }}>\n        {saveList.map((item, index) => (\n          // 暂存列表\n          <div key={item.key} style={item.style} className='card-item' onClick={() => onCardClick(item)}>\n            {item.content}\n          </div>\n        ))}\n      </div>\n      <div className='select-list' style={{ width: 7 * baseWidth * 2, height: baseHeight * 2 }}>\n        {selectList.map((item, index) => (\n          // 已选列表\n          <div key={item.key} style={item.style} className='card-item'>\n            {item.content}\n          </div>\n        ))}\n      </div>\n      <div className='tools'>\n        <Badge count={saveCount} showZero>\n          <div className='tools-item' onClick={saveCard}>\n            {SVG_LIST.SAVE}\n          </div>\n        </Badge>\n        <Badge count={retryCount} showZero>\n          <div className='tools-item' onClick={onClickWithDraw}>\n            {SVG_LIST.RETRY}\n          </div>\n        </Badge>\n        <Badge count={shuffleCount} showZero>\n          <div className='tools-item' onClick={shuffle}>\n            {SVG_LIST.SHUFFLE}\n          </div>\n        </Badge>\n      </div>\n      {clearList.map((item) => (\n        // 已选列表\n        <div key={item.key} style={item.style} className='card-item'>\n          {item.content}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Gaming;\n"],"names":["CardItem","x","y","z","key","baseWidth","baseHeight","__publicField","val","CONTENT_TYPE","COLOR_TYPE","getMap","cardRandom","width","height","cardMap","item","heightItem","cardItemList","k","shrink","i","mid","j","canPlaceItem","cardItem","leftCardList","setCardValue","maxCardType","colorStack","value","leftItem","pre","cur","calcuCover","maxWidth","maxHeight","coverMap","findItemIndex","itemList","SVG_LIST","SAVE","_jsxDEV","_jsxFileName","RETRY","SHUFFLE","Gaming","config","changeWin","retryNumber","shuffleNumber","saveNumber","useMemo","leftOffset","totalCard","setTotalCard","useState","doneCard","setDoneCard","setCardItemList","selectList","setSelectList","clearList","setClearList","saveList","setSaveList","historyList","setHistoryList","retryCount","setRetryCount","saveCount","setSaveCount","shuffleCount","setShuffleCount","initGame","initCardItemList","fillValueItemList","length","useEffect","formatItemList","cardList","map","index","style","top","left","handleSelectItem","count","tempClearList","selectLists","filter","selectItem","splice","push","onCardClick","cardIndex","saveIndex","show","saveCard","message","info","warn","slice","shuffle","forEach","randNum","Math","floor","random","newItem","temp","sort","a","b","onClickWithDraw","withDrawItem","pop","selectIndex","cover","Boolean","join","content","Badge"],"mappings":"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"}